-- Tuple3の扱いに苦戦している．Lensが使えるようになれば……
import Control.Arrow

maximum [(sumDigits .  fst ) &&& id $ (a^b, (a, b)) | a <- [1..100], b <- [1..100]]
sumDigits :: Integer -> Integer
sumDigits x = sumDigits' (x, 0)
  where sumDigits' :: (Integer, Integer) ->  Integer
        sumDigits' (0, result) = result
        sumDigits' (x, result) = sumDigits' (x `div` 10, result + (x `mod` 10))


-- > maximum [(sum . map (\x -> (read [x])::Integer) . show .  fst ) &&& id $ (a^b, (a, b)) | a <- [1..100], b <- [1..100]]
-- (972,(3848960788934848611927795802824596789608451156087366034658627953530148126008534258032267383768627487094610968554286692697374726725853195657679460590239636893953692985541958490801973870359499,(99,95)))
-- (2.89 secs, 2,729,880,440 bytes)
-- > maximum [(sumDigits .  fst ) &&& id $ (a^b, (a, b)) | a <- [1..100], b <- [1..100]]
-- (972,(3848960788934848611927795802824596789608451156087366034658627953530148126008534258032267383768627487094610968554286692697374726725853195657679460590239636893953692985541958490801973870359499,(99,95)))
-- (1.15 secs, 199,088,024 bytes)
