#+7色×10個＝70個のボールが壺の中に入っている。
#+20個のボールを取り出したときの色数の期待値を答えよ

#+binomial(70,+20)+=>+161884603662657876
# 1色→ C[7,1] * C[10,20] -> 7*0 = 0
# 2色→ C[7,2] * C[20,20] -> 42 * 1 = 42
# 3色→binomial(30, 20) -> 1

require_relative 'util'

list = []
# 70から20個取るn色の組合せ
list = (2..7).map do |n|
  [*1..10]
  .repeated_permutation(n)
  .filter{|c| c.sum == 20}
end
p list[1]

C10 = [*0..10].map{|n| C(10,n)}
p C10


# それぞれのパターンのとり方
list2 = list.map! do |a|
  a.map do |b|
    # b = [1,9,10]
    b.map{|n| C10[n]}.prod
  end
end
p list[1]

list3 = list.map!.with_index(2) do |a,n|
  P(7,n) * a.sum
end

p list
p list.sum

list4 = list.map!.with_index(2) do |a,n|
  n * a
end

all = C(70,20)
p :answer
p 1.0 * list4.sum / all

exit

# あかん。重複して数えてるわ

#赤橙黄緑青藍紫
[0,0,0,0,0,0,0]
# 70から20個取るすべての組合せ
list = (0..10).to_a.repeated_permutation(7).filter{|c| c.sum == 20};0
# n色の個数
list2 = list.map{|item| 7 - item.count(0)}.group_by(&:itself).transform_values(&:length)
#=> {2=>21, 3=>2205, 4=>22155, 5=>68166, 6=>76104, 7=>26544}

puts 1.0 * list2.map{|k,v| k*v}.sum /
#=> 5.525443786982248


1078539/195195





#制限付き分割数
# 和が20で最大数が10で項数が2～7のもの
10+10
10+9+1
10+8+2
10+8+1+1
10+7+3
10+7+2+1
10+7+1+1+1
10+6+4
10+6+3+1
10+6+2+2
10+6+2+1+1
10+6+1+1+1+1
10+5+5
10+5+4+1
10+5+3+2
10+5+3+1+1
10+5+2+1+1+1
10+5+1+1+1+1+1
10+4+4+2
10+4+4+1+1
10+4+3+3
10+4+3+2+1
10+4+3+1+1+1
10+4+2+2+2
10+4+2+2+1+1
10+4+2+1+1+1+1
10+3+3+3+1
10+3+3+2+2
10+3+3+2+1+1
10+3+3+1+1+1+1
10+3+2+2+2+1
10+3+2+2+1+1+1
10+2+2+2+2+2
10+2+2+2+2+1+1
9+9+2
9+9+1+1
9+8+3
9+8+2+1
9+8+1+1+1
9+8+1+1+1

5+5+5+5
4+4+4+4+4
4+4+4+4+3+1
4+4+4+4+2+1+1
4+4+4+3+3+2
4+4+4+3+3+1+1
4+4+4+3+2+2+1
4+4+4+2+2+2+2
4+4+3+3+3+3
4+4+3+3+3+2+1
4+4+3+3+2+2+2
4+3+3+3+3+3+1
4+3+3+3+3+2+2
3+3+3+3+3+3+2


